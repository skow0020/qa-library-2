# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REACT_APP_ENV_URL: "https://qa-library-dev.herokuapp.com"

jobs:
  install-build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cypress install
        uses: cypress-io/github-action@v2
        with:
          # Disable running of tests within install job
          runTests: false
          build: npm run build
      - run: npm run lint
      - run: npm test -- --coverage
      - run: npm run cypress:run -- --component

      - name: Save build folder
        uses: actions/upload-artifact@v2
        with:
          name: build
          if-no-files-found: error
          path: build

  ui-chrome-tests:
    runs-on: ubuntu-latest
    needs: install-build-test
    strategy:
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - run: npm i -g serve

      - name: 'UI Tests - Chrome'
        uses: cypress-io/github-action@v2
        with:
          start: serve -s build
          wait-on: 'http://localhost:3000'
          browser: chrome
          config-file: cypress.config.js
        #   record: true
        #   parallel: true
        #   group: 'UI - Chrome'
        #   spec: cypress/tests/ui/*
        # env:
        #   CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        #   # Recommended: pass the GitHub token lets this action correctly
        #   # determine the unique run id necessary to re-run the checks
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
